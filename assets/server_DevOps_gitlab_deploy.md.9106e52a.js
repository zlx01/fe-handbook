import{_ as s,c as a,o as n,d as l}from"./app.a4863d7a.js";const D=JSON.parse('{"title":"Linux Docker 部署 GitLab、GitLab Runner","description":"","frontmatter":{},"headers":[{"level":2,"title":"文档","slug":"文档","link":"#文档","children":[]},{"level":2,"title":"部署GitLab","slug":"部署gitlab","link":"#部署gitlab","children":[]},{"level":2,"title":"部署GitLab Runner","slug":"部署gitlab-runner","link":"#部署gitlab-runner","children":[]},{"level":2,"title":"注册GitLab Runner","slug":"注册gitlab-runner","link":"#注册gitlab-runner","children":[]},{"level":2,"title":"问题","slug":"问题","link":"#问题","children":[]}],"relativePath":"server/DevOps/gitlab/deploy.md","lastUpdated":1676394338000}'),e={name:"server/DevOps/gitlab/deploy.md"},o=l(`<h1 id="linux-docker-部署-gitlab、gitlab-runner" tabindex="-1">Linux Docker 部署 GitLab、GitLab Runner <a class="header-anchor" href="#linux-docker-部署-gitlab、gitlab-runner" aria-hidden="true">#</a></h1><h2 id="文档" tabindex="-1">文档 <a class="header-anchor" href="#文档" aria-hidden="true">#</a></h2><ul><li><a href="https://docs.gitlab.com/ee/install/docker.html" target="_blank" rel="noreferrer">https://docs.gitlab.com/ee/install/docker.html</a></li><li><a href="https://docs.gitlab.com/runner/install/docker.html" target="_blank" rel="noreferrer">https://docs.gitlab.com/runner/install/docker.html</a></li><li><a href="https://docs.gitlab.com/15.5/runner/register/index.html#docker" target="_blank" rel="noreferrer">https://docs.gitlab.com/15.5/runner/register/index.html#docker</a></li></ul><h2 id="部署gitlab" tabindex="-1">部署GitLab <a class="header-anchor" href="#部署gitlab" aria-hidden="true">#</a></h2><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">run</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--detach</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C3E88D;">--hostname</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">gitlab.example.com</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C3E88D;">--publish</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">80</span><span style="color:#C3E88D;">:</span><span style="color:#F78C6C;">80</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C3E88D;">--name</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">gitlab</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C3E88D;">--restart</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">always</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C3E88D;">--volume</span><span style="color:#A6ACCD;"> $GITLAB_HOME</span><span style="color:#C3E88D;">/config:/etc/gitlab</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C3E88D;">--volume</span><span style="color:#A6ACCD;"> $GITLAB_HOME</span><span style="color:#C3E88D;">/logs:/var/log/gitlab</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C3E88D;">--volume</span><span style="color:#A6ACCD;"> $GITLAB_HOME</span><span style="color:#C3E88D;">/data:/var/opt/gitlab</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C3E88D;">--shm-size</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">256m</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C3E88D;">gitlab/gitlab-ee:latest</span></span>
<span class="line"></span></code></pre></div><p><code>--publish</code> 第一个端口是本地端口，第二个端口是容器端口，下面的命令最终会让GitLab运行在 <code>80</code> 端口，对外暴露的域名是 <code>gitlab.example.com</code>，当然对于局域网，要配置dns解析才能用域名访问，可以直接用<code>localhost</code> 或 <code>127.0.0.1</code> 或 <code>主机ip</code> 访问.</p><h2 id="部署gitlab-runner" tabindex="-1">部署GitLab Runner <a class="header-anchor" href="#部署gitlab-runner" aria-hidden="true">#</a></h2><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">run</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-d</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--name</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">gitlab-runner</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--restart</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">always</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C3E88D;">--add-host=gitlab.example.com:192.168.65.135</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C3E88D;">-v</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/srv/gitlab-runner/config:/etc/gitlab-runner</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C3E88D;">-v</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/var/run/docker.sock:/var/run/docker.sock</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C3E88D;">gitlab/gitlab-runner:latest</span></span>
<span class="line"></span></code></pre></div><p><code>--add-host=gitlab.example.com:192.168.65.135</code> 是向容器添加dns解析</p><h2 id="注册gitlab-runner" tabindex="-1">注册GitLab Runner <a class="header-anchor" href="#注册gitlab-runner" aria-hidden="true">#</a></h2><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">run</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--rm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-it</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;">--add-host=gitlab.example.com:192.168.65.135 \\</span></span>
<span class="line"><span style="color:#A6ACCD;">-v </span><span style="color:#C3E88D;">/srv/gitlab-runner/config:/etc/gitlab-runner</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;">gitlab/gitlab-runner </span><span style="color:#C3E88D;">register</span></span>
<span class="line"></span></code></pre></div><p>注册用到的容器：</p><ul><li>也是用 <code>gitlab/gitlab-runner</code> 这个镜像</li><li>提供了 register 命令</li><li>与上一步共享同一个持久化卷 <code>/etc/gitlab-runner</code> ，参考<a href="https://stackoverflow.com/questions/59930028/how-does-gitlab-register-a-runner-on-a-docker-container" target="_blank" rel="noreferrer">回答</a></li><li><code>--rm</code> 退出之后会销毁</li></ul><h2 id="问题" tabindex="-1">问题 <a class="header-anchor" href="#问题" aria-hidden="true">#</a></h2><p>runner跑ci时拉取不到仓库代码，解析不了域名，需要配置 <code>clone_url</code>，参考<a href="https://docs.gitlab.com/runner/configuration/advanced-configuration.html#how-clone_url-works" target="_blank" rel="noreferrer">官方文档</a></p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 进入runner容器内</span></span>
<span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">exec</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-it</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">runner容器id</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/bin/bash</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 编辑runner的配置文件</span></span>
<span class="line"><span style="color:#FFCB6B;">vim</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/etc/gitlab-runner/config.toml</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 添加配置</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># clone_url = “http://192.168.65.135/”</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 这里还可以为每个镜像都配置额外的host，例如</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># extra_hosts = [&quot;other-host:192.168.1.104&quot;]</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 可以在192.168.1.104的8080端口运行一个web服务，然后ci中添加以下script，运行ci看看日志</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># curl http://other-host:8080/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 重启runner</span></span>
<span class="line"><span style="color:#FFCB6B;">gitlab-runner</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">restart</span></span>
<span class="line"></span></code></pre></div>`,16),p=[o];function t(r,c,i,C,y,d){return n(),a("div",null,p)}const h=s(e,[["render",t]]);export{D as __pageData,h as default};
