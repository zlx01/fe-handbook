import{_ as e,c as o,o as l,a4 as t}from"./chunks/framework.CFdyflnk.js";const _=JSON.parse('{"title":"Polyfill vs Shim","description":"","frontmatter":{},"headers":[],"relativePath":"build-tools/compiler/polyfill-shim.md","filePath":"build-tools/compiler/polyfill-shim.md","lastUpdated":1726577403000}'),i={name:"build-tools/compiler/polyfill-shim.md"},r=t('<h1 id="polyfill-vs-shim" tabindex="-1">Polyfill vs Shim <a class="header-anchor" href="#polyfill-vs-shim" aria-label="Permalink to &quot;Polyfill vs Shim&quot;">​</a></h1><h2 id="polyfill" tabindex="-1"><a href="https://en.wikipedia.org/wiki/Polyfill_(programming)" target="_blank" rel="nofollow noopener noreferrer">polyfill</a> <a class="header-anchor" href="#polyfill" aria-label="Permalink to &quot;[polyfill](https://en.wikipedia.org/wiki/Polyfill_(programming))&quot;">​</a></h2><blockquote><p>A <strong>polyfill</strong> is code that implements a feature on web browsers that do not natively support the feature. Formally, &quot;a polyfill is a shim for a browser API.&quot;</p></blockquote><p>Polyfill 是一块代码，用来为旧浏览器提供它没有原生支持的较新的功能。举例：Babel polyfill features that are missing in your target environment (through a third-party polyfill such as core-js)</p><h2 id="shim" tabindex="-1"><a href="https://en.wikipedia.org/wiki/Shim_(computing)" target="_blank" rel="nofollow noopener noreferrer">shim</a> <a class="header-anchor" href="#shim" aria-label="Permalink to &quot;[shim](https://en.wikipedia.org/wiki/Shim_(computing))&quot;">​</a></h2><blockquote><p>A <strong>shim</strong> is a library that transparently intercepts API calls and changes the arguments passed, handles the operation itself or redirects the operation elsewhere.</p></blockquote><p>在一个旧的环境中模拟出一个新 API ，而且仅靠旧环境中已有的手段实现，以便所有的浏览器具有相同的行为。举例：jQuery 发送Ajax请求，屏蔽了浏览器实现细节。</p><p><a href="https://github.com/es-shims" target="_blank" rel="nofollow noopener noreferrer">es-shims</a> <a href="https://github.com/paulmillr/es6-shim" target="_blank" rel="nofollow noopener noreferrer">es6-shim</a></p>',8),a=[r];function s(n,h,p,m,f,c){return l(),o("div",null,a)}const u=e(i,[["render",s]]);export{_ as __pageData,u as default};
