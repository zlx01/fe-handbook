import{_ as e,c as r,o as a,d as t}from"./app.5664f2e7.js";const f=JSON.parse('{"title":"PWA","description":"","frontmatter":{},"headers":[{"level":2,"title":"Reference","slug":"reference","link":"#reference","children":[]}],"relativePath":"advance/pwa/index.md","lastUpdated":1676467774000}'),o={name:"advance/pwa/index.md"},i=t('<h1 id="pwa" tabindex="-1">PWA <a class="header-anchor" href="#pwa" aria-hidden="true">#</a></h1><blockquote><p>渐进式网络应用程序(progressive web application - PWA)，是一种可以提供类似于 native app(原生应用程序) 体验的 web app(网络应用程序)。PWA 可以用来做很多事。其中最重要的是，在**离线(offline)**时应用程序能够继续运行功能。这是通过使用名为 <a href="https://developers.google.com/web/fundamentals/primers/service-workers/" target="_blank" rel="noreferrer">Service Workers</a> 的 web 技术来实现的。</p></blockquote><blockquote><p>Workbox——Production-ready service worker libraries and tooling.</p></blockquote><ul><li>强烈推荐看百度技术团队写的 <a href="https://lavas-project.github.io/pwa-book/" target="_blank" rel="noreferrer">PWA应用实践</a></li><li>webpack项目可以通过配置 <code>workbox-webpack-plugin</code> 实现</li><li>vite项目可以通过配置 <code>vite-plugin-pwa</code> 实现</li></ul><h2 id="reference" tabindex="-1">Reference <a class="header-anchor" href="#reference" aria-hidden="true">#</a></h2><ul><li><a href="https://lavas-project.github.io/pwa-book/" target="_blank" rel="noreferrer">https://lavas-project.github.io/pwa-book/</a></li><li><a href="https://web.dev/what-are-pwas/" target="_blank" rel="noreferrer">https://web.dev/what-are-pwas/</a></li><li><a href="https://webpack.js.org/guides/progressive-web-application/" target="_blank" rel="noreferrer">https://webpack.js.org/guides/progressive-web-application/</a></li><li><a href="https://developer.chrome.com/docs/workbox/modules/workbox-webpack-plugin/" target="_blank" rel="noreferrer">https://developer.chrome.com/docs/workbox/modules/workbox-webpack-plugin/</a></li><li><a href="https://vite-plugin-pwa.netlify.app/" target="_blank" rel="noreferrer">https://vite-plugin-pwa.netlify.app/</a></li></ul>',6),l=[i];function p(n,s,c,d,h,b){return a(),r("div",null,l)}const _=e(o,[["render",p]]);export{f as __pageData,_ as default};
