import{_ as i,c as a,o as e,ag as t}from"./chunks/framework.C86mscM5.js";const k=JSON.parse('{"title":"grid","description":"","frontmatter":{},"headers":[],"relativePath":"fundamentals/css/grid.md","filePath":"fundamentals/css/grid.md","lastUpdated":1744516180000}'),n={name:"fundamentals/css/grid.md"};function l(r,s,o,d,p,h){return e(),a("div",null,s[0]||(s[0]=[t(`<h1 id="grid" tabindex="-1">grid <a class="header-anchor" href="#grid" aria-label="Permalink to &quot;grid&quot;">​</a></h1><ul><li>强烈推荐阮一峰老师的<a href="https://www.ruanyifeng.com/blog/2019/03/grid-layout-tutorial.html" target="_blank" rel="nofollow noopener noreferrer">博文</a></li><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/grid" target="_blank" rel="nofollow noopener noreferrer">grid</a></li></ul><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.box</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  grid-template-columns</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">repeat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">minmax</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">));</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p><code>repeat()</code> 是一个 CSS 函数，用于简化重复的轨道列表。它接受两个参数：</p><ul><li><strong>第一个参数</strong>：表示重复的次数。在 <code>repeat(2, minmax(0, 1fr))</code> 中，<code>2</code> 表示后面的轨道定义会重复 2 次。</li><li><strong>第二个参数</strong>：表示要重复的轨道定义。这里是 <code>minmax(0, 1fr)</code>。</li></ul><p><code>minmax()</code> 也是一个 CSS 函数，用于定义轨道的最小和最大尺寸。它接受两个参数：</p><ul><li><strong>第一个参数</strong>：表示轨道的最小尺寸。在 <code>minmax(0, 1fr)</code> 中，<code>0</code> 意味着该轨道的最小宽度为 0 像素。</li><li><strong>第二个参数</strong>：表示轨道的最大尺寸。<code>1fr</code> 是一个灵活的长度单位，<code>fr</code> 代表 “分数单位”，<code>1fr</code> 表示将剩余的可用空间平均分成若干份，每个 <code>1fr</code> 占其中一份。在这里，每列的最大宽度是将网格容器剩余的可用空间平均分成两份后的宽度。</li></ul>`,7)]))}const g=i(n,[["render",l]]);export{k as __pageData,g as default};
