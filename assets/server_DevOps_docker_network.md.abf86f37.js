import{_ as s,c as n,o as a,d as o}from"./app.5664f2e7.js";const e="/fe-handbook/assets/image-20230205162915918.719ef9e8.png",_=JSON.parse('{"title":"Docker Network","description":"","frontmatter":{},"headers":[],"relativePath":"server/DevOps/docker/network.md","lastUpdated":1676467774000}'),p={name:"server/DevOps/docker/network.md"},l=o(`<h1 id="docker-network" tabindex="-1">Docker Network <a class="header-anchor" href="#docker-network" aria-hidden="true">#</a></h1><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">network</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">create</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-d</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">bridge</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">snet1</span></span>
<span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">network</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">ls</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">run</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-itd</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--name</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">busybox1</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--network</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">snet1</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">busybox</span></span>
<span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">run</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-itd</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--name</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">busybox2</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--network</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">snet1</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">busybox</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">exec</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">busybox1</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">ping</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">busybox2</span></span>
<span class="line"></span></code></pre></div><p><img src="`+e+'" alt="image-20230205162915918"></p>',3),t=[l];function r(c,C,y,D,A,d){return a(),n("div",null,t)}const E=s(p,[["render",r]]);export{_ as __pageData,E as default};
