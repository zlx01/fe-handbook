import{_ as e,c as a,o as l,d as r}from"./app.1bfde456.js";const p=JSON.parse('{"title":"MVC MVP MVVM","description":"","frontmatter":{},"headers":[{"level":2,"title":"MVC","slug":"mvc","link":"#mvc","children":[]},{"level":2,"title":"MVVM","slug":"mvvm","link":"#mvvm","children":[]}],"relativePath":"framework/mvvm/mvc-mvp-mvvm.md","lastUpdated":1681663861000}'),t={name:"framework/mvvm/mvc-mvp-mvvm.md"},m=r('<h1 id="mvc-mvp-mvvm" tabindex="-1">MVC MVP MVVM <a class="header-anchor" href="#mvc-mvp-mvvm" aria-hidden="true">#</a></h1><p>参考<a href="https://www.ruanyifeng.com/blog/2015/02/mvcmvp_mvvm.html" target="_blank" rel="noreferrer">博文</a></p><h2 id="mvc" tabindex="-1">MVC <a class="header-anchor" href="#mvc" aria-hidden="true">#</a></h2><p>View 传送指令到 Controller。Controller 完成业务逻辑后，要求 Model 改变状态。Model 将新的数据发送到 View，用户得到反馈。</p><ul><li>视图（View）：用户界面。</li><li>控制器（Controller）：业务逻辑</li><li>模型（Model）：数据保存</li></ul><h2 id="mvvm" tabindex="-1">MVVM <a class="header-anchor" href="#mvvm" aria-hidden="true">#</a></h2><ul><li>模型（Model）</li><li>视图（View）</li><li>视图模型（Model-View）</li></ul>',7),i=[m];function v(o,c,n,d,s,_){return l(),a("div",null,i)}const V=e(t,[["render",v]]);export{p as __pageData,V as default};
