import{_ as e,c as a,o,a4 as t}from"./chunks/framework.luo6lmAI.js";const r="/fe-handbook/assets/MVVM.Q0GRGsVi.png",M=JSON.parse('{"title":"MVC MVP MVVM","description":"","frontmatter":{},"headers":[],"relativePath":"framework/vue/v2/mvc-mvp-mvvm.md","filePath":"framework/vue/v2/mvc-mvp-mvvm.md","lastUpdated":1713631529000}'),l={name:"framework/vue/v2/mvc-mvp-mvvm.md"},m=t('<h1 id="mvc-mvp-mvvm" tabindex="-1">MVC MVP MVVM <a class="header-anchor" href="#mvc-mvp-mvvm" aria-label="Permalink to &quot;MVC MVP MVVM&quot;">​</a></h1><p>参考<a href="https://www.ruanyifeng.com/blog/2015/02/mvcmvp_mvvm.html" target="_blank" rel="nofollow noopener noreferrer">博文</a></p><h2 id="mvc" tabindex="-1">MVC <a class="header-anchor" href="#mvc" aria-label="Permalink to &quot;MVC&quot;">​</a></h2><p>View 传送指令到 Controller。Controller 完成业务逻辑后，要求 Model 改变状态。Model 将新的数据发送到 View，用户得到反馈。</p><ul><li>视图（View）：用户界面。</li><li>控制器（Controller）：业务逻辑</li><li>模型（Model）：数据保存</li></ul><h2 id="mvvm" tabindex="-1">MVVM <a class="header-anchor" href="#mvvm" aria-label="Permalink to &quot;MVVM&quot;">​</a></h2><ul><li>模型（Model）</li><li>视图（View）</li><li>视图模型（Model-View）</li></ul><p><img src="'+r+'" alt="MVVM"></p>',8),i=[m];function v(n,c,s,V,_,d){return o(),a("div",null,i)}const h=e(l,[["render",v]]);export{M as __pageData,h as default};
