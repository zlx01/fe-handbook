import{_ as e,c as a,o as r,d as t}from"./app.a4863d7a.js";const l="/fe-handbook/assets/数据类型.25e31e09.png",_=JSON.parse('{"title":"数据交换格式","description":"","frontmatter":{},"headers":[{"level":2,"title":"数据结构","slug":"数据结构","link":"#数据结构","children":[]},{"level":2,"title":"数据格式","slug":"数据格式","link":"#数据格式","children":[{"level":3,"title":"XML","slug":"xml","link":"#xml","children":[]},{"level":3,"title":"JSON","slug":"json","link":"#json","children":[]},{"level":3,"title":"YAML","slug":"yaml","link":"#yaml","children":[]},{"level":3,"title":"Toml","slug":"toml","link":"#toml","children":[]}]},{"level":2,"title":"Reference","slug":"reference","link":"#reference","children":[]}],"relativePath":"fundamentals/js/request/data-type-format.md","lastUpdated":1676394338000}'),n={name:"fundamentals/js/request/data-type-format.md"},i=t('<h1 id="数据交换格式" tabindex="-1">数据交换格式 <a class="header-anchor" href="#数据交换格式" aria-hidden="true">#</a></h1><h2 id="数据结构" tabindex="-1">数据结构 <a class="header-anchor" href="#数据结构" aria-hidden="true">#</a></h2><blockquote><p>There are many kinds of data structures, but they can all be adequately represented with three basic primitives: mappings (hashes/dictionaries), sequences (arrays/lists) and scalars (strings/numbers).</p></blockquote><p><img src="'+l+'" alt="数据类型"></p><h2 id="数据格式" tabindex="-1">数据格式 <a class="header-anchor" href="#数据格式" aria-hidden="true">#</a></h2><h3 id="xml" tabindex="-1"><a href="https://www.xml.com/" target="_blank" rel="noreferrer">XML</a> <a class="header-anchor" href="#xml" aria-hidden="true">#</a></h3><p>eXtensible Markup Language</p><p>应用举例：</p><ul><li>Maven pom.xml</li><li>Spring ApplicationContext.xml</li></ul><h3 id="json" tabindex="-1"><a href="https://www.json.org/json-en.html" target="_blank" rel="noreferrer">JSON</a> <a class="header-anchor" href="#json" aria-hidden="true">#</a></h3><p>JavaScript Object Notation</p><p>应用举例：</p><ul><li>npm package.json</li></ul><h3 id="yaml" tabindex="-1"><a href="https://yaml.org/" target="_blank" rel="noreferrer">YAML</a> <a class="header-anchor" href="#yaml" aria-hidden="true">#</a></h3><p>YAML Ain&#39;t Markup Language</p><p>应用举例：</p><ul><li>SpringBoot application.yaml</li></ul><h3 id="toml" tabindex="-1"><a href="https://toml.io/en/" target="_blank" rel="noreferrer">Toml</a> <a class="header-anchor" href="#toml" aria-hidden="true">#</a></h3><p>应用举例：</p><ul><li>rust的包描述文件 Cargo.toml</li></ul><h2 id="reference" tabindex="-1">Reference <a class="header-anchor" href="#reference" aria-hidden="true">#</a></h2><ul><li><a href="https://www.ruanyifeng.com/blog/2009/05/data_types_and_json.html" target="_blank" rel="noreferrer">https://www.ruanyifeng.com/blog/2009/05/data_types_and_json.html</a></li><li><a href="https://yaml.org/spec/1.2.2/#chapter-1-introduction-to-yaml" target="_blank" rel="noreferrer">https://yaml.org/spec/1.2.2/#chapter-1-introduction-to-yaml</a></li></ul>',22),s=[i];function o(h,d,c,p,m,u){return r(),a("div",null,s)}const g=e(n,[["render",o]]);export{_ as __pageData,g as default};
