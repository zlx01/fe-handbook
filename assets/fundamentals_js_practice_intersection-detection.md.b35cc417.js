import{_ as e,c as t,o as n,d as r}from"./app.80f08bd9.js";const g=JSON.parse('{"title":"判断元素是否在视窗内","description":"","frontmatter":{},"headers":[{"level":2,"title":"Element.getBoundingClientRect()","slug":"element-getboundingclientrect","link":"#element-getboundingclientrect","children":[]},{"level":2,"title":"IntersectionObserver API","slug":"intersectionobserver-api","link":"#intersectionobserver-api","children":[]},{"level":2,"title":"Reference","slug":"reference","link":"#reference","children":[]}],"relativePath":"fundamentals/js/practice/intersection-detection.md","lastUpdated":1676715890000}'),i={name:"fundamentals/js/practice/intersection-detection.md"},l=r('<h1 id="判断元素是否在视窗内" tabindex="-1">判断元素是否在视窗内 <a class="header-anchor" href="#判断元素是否在视窗内" aria-hidden="true">#</a></h1><h2 id="element-getboundingclientrect" tabindex="-1">Element.getBoundingClientRect() <a class="header-anchor" href="#element-getboundingclientrect" aria-hidden="true">#</a></h2><ul><li>监听滚动事件，获取元素坐标，与视口尺寸比较</li><li>频繁触发，性能差</li></ul><h2 id="intersectionobserver-api" tabindex="-1">IntersectionObserver API <a class="header-anchor" href="#intersectionobserver-api" aria-hidden="true">#</a></h2><ul><li>注册监听元素交叉监听事件</li><li>利用浏览器空闲时段触发，性能好</li></ul><h2 id="reference" tabindex="-1">Reference <a class="header-anchor" href="#reference" aria-hidden="true">#</a></h2><ul><li><a href="https://juejin.cn/post/6844903788914933774" target="_blank" rel="noreferrer">https://juejin.cn/post/6844903788914933774</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect" target="_blank" rel="noreferrer">https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API" target="_blank" rel="noreferrer">https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API</a></li></ul>',7),a=[l];function o(c,s,d,h,_,p){return n(),t("div",null,a)}const f=e(i,[["render",o]]);export{g as __pageData,f as default};
