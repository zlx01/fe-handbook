import{_ as e,c as a,o as l,d as r}from"./app.cd2cc87c.js";const t="/fe-handbook/assets/MVVM.d71fed5f.png",V=JSON.parse('{"title":"MVC MVP MVVM","description":"","frontmatter":{},"headers":[{"level":2,"title":"MVC","slug":"mvc","link":"#mvc","children":[]},{"level":2,"title":"MVVM","slug":"mvvm","link":"#mvvm","children":[]}],"relativePath":"framework/vue/v2/mvc-mvp-mvvm.md","lastUpdated":1699801325000}'),i={name:"framework/vue/v2/mvc-mvp-mvvm.md"},o=r('<h1 id="mvc-mvp-mvvm" tabindex="-1">MVC MVP MVVM <a class="header-anchor" href="#mvc-mvp-mvvm" aria-hidden="true">#</a></h1><p>参考<a href="https://www.ruanyifeng.com/blog/2015/02/mvcmvp_mvvm.html" target="_blank" rel="nofollow noopener noreferrer">博文</a></p><h2 id="mvc" tabindex="-1">MVC <a class="header-anchor" href="#mvc" aria-hidden="true">#</a></h2><p>View 传送指令到 Controller。Controller 完成业务逻辑后，要求 Model 改变状态。Model 将新的数据发送到 View，用户得到反馈。</p><ul><li>视图（View）：用户界面。</li><li>控制器（Controller）：业务逻辑</li><li>模型（Model）：数据保存</li></ul><h2 id="mvvm" tabindex="-1">MVVM <a class="header-anchor" href="#mvvm" aria-hidden="true">#</a></h2><ul><li>模型（Model）</li><li>视图（View）</li><li>视图模型（Model-View）</li></ul><p><img src="'+t+'" alt="MVVM"></p>',8),m=[o];function n(v,c,d,s,_,h){return l(),a("div",null,m)}const M=e(i,[["render",n]]);export{V as __pageData,M as default};
