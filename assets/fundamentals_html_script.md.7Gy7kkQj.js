import{_ as t,c as e,o,a4 as s}from"./chunks/framework.CFdyflnk.js";const r="/fe-handbook/assets/061bd176646f4593bd17f53f0791345b.4msA-C7L.png",a="/fe-handbook/assets/vue%E5%AE%98%E7%BD%91script.BkXSfoB8.png",g=JSON.parse('{"title":"<script>","description":"","frontmatter":{},"headers":[],"relativePath":"fundamentals/html/script.md","filePath":"fundamentals/html/script.md","lastUpdated":1727024381000}'),c={name:"fundamentals/html/script.md"},i=s('<h1 id="script" tabindex="-1">&lt;script&gt; <a class="header-anchor" href="#script" aria-label="Permalink to &quot;\\&lt;script&gt;&quot;">​</a></h1><ul><li><p>推荐看《JavaScript高级程序设计》第二章，对这个标签介绍得很详细。</p></li><li><p>type属性，平时都是用<code>type=&quot;text/javascript&quot;</code>比较多，ES6模块则用<code>type=&quot;module&quot;</code></p></li><li><p>crossorigin，对于<strong>跨域CDN资源</strong>的加载，通常会设置为anonymous。假设有个业务页面域名是A.example.com，引入的CDN资源是cdn.example.com，这时候遇到两个问题：1.跨域的js资源运行出错的话，<code>window.onerror</code> 捕获的时候，内部的<code>error.message</code>只能看到<code>Script error.</code>看不到完整的错误内容; 2.请求js资源通常是不需要携带用户的身份凭据的（通常是cookie）这时候就需要设置crossorigin属性为anonymous。</p></li><li><p>还有两个安全相关的属性：integrity、nonce。如果安全要求较高，可以考虑使用。</p></li><li><p>defer 立即下载，推迟执行</p></li><li><p>async 异步下载，立即执行（并阻塞）</p></li></ul><p><img src="'+r+'" alt=""></p><p><img src="'+a+'" alt="vue官网script"></p>',4),p=[i];function n(l,d,_,m,u,f){return o(),e("div",null,p)}const S=t(c,[["render",n]]);export{g as __pageData,S as default};
