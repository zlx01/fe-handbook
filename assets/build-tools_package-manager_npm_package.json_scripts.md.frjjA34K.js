import{_ as e,c as a,o as t,a4 as r}from"./chunks/framework.CFdyflnk.js";const u=JSON.parse('{"title":"scripts","description":"","frontmatter":{},"headers":[],"relativePath":"build-tools/package-manager/npm/package.json/scripts.md","filePath":"build-tools/package-manager/npm/package.json/scripts.md","lastUpdated":1727024381000}'),n={name:"build-tools/package-manager/npm/package.json/scripts.md"},o=r('<h1 id="scripts" tabindex="-1">scripts <a class="header-anchor" href="#scripts" aria-label="Permalink to &quot;scripts&quot;">​</a></h1><blockquote><p>每当执行npm run，就会自动新建一个 Shell，在这个 Shell 里面执行指定的脚本命令。因此，只要是 Shell（一般是 Bash）可以运行的命令，就可以写在 npm 脚本里面。</p><p>npm run新建的这个 Shell，会将当前目录的node_modules/.bin子目录加入PATH变量，执行结束后，再将PATH变量恢复原样。</p><p>当前目录的node_modules/.bin子目录里面的所有脚本，都可以直接用脚本名调用，而不必加上路径。</p></blockquote><h2 id="reference" tabindex="-1">Reference <a class="header-anchor" href="#reference" aria-label="Permalink to &quot;Reference&quot;">​</a></h2><ul><li><a href="http://www.ruanyifeng.com/blog/2016/10/npm_scripts.html" target="_blank" rel="nofollow noopener noreferrer">http://www.ruanyifeng.com/blog/2016/10/npm_scripts.html</a></li></ul>',4),s=[o];function c(l,p,i,_,d,m){return t(),a("div",null,s)}const f=e(n,[["render",c]]);export{u as __pageData,f as default};
