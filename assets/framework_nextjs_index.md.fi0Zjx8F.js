import{_ as t,c as e,o as r,a4 as a}from"./chunks/framework.luo6lmAI.js";const f=JSON.parse('{"title":"Next.js","description":"","frontmatter":{},"headers":[],"relativePath":"framework/nextjs/index.md","filePath":"framework/nextjs/index.md","lastUpdated":1713631529000}'),n={name:"framework/nextjs/index.md"},d=a('<h1 id="next-js" tabindex="-1"><a href="https://nextjs.org/" target="_blank" rel="nofollow noopener noreferrer">Next.js</a> <a class="header-anchor" href="#next-js" aria-label="Permalink to &quot;[Next.js](https://nextjs.org/)&quot;">​</a></h1><blockquote><p>Next.js is a React framework for building full-stack web applications.</p></blockquote><h2 id="main-features" tabindex="-1">Main Features <a class="header-anchor" href="#main-features" aria-label="Permalink to &quot;Main Features&quot;">​</a></h2><p>Some of the main Next.js features include:</p><table><thead><tr><th>Feature</th><th>Description</th><th></th></tr></thead><tbody><tr><td>Routing</td><td>A file-system based router built on top of Server Components that supports layouts, nested routing, loading states, error handling, and more.</td><td>基于文件系统的路由模式。支持服务端组件。支持布局、嵌套路由、加载状态、错误处理</td></tr><tr><td>Rendering</td><td>Client-side and Server-side Rendering with Client and Server Components. Further optimized with Static and Dynamic Rendering on the server with Next.js. <strong>Streaming on Edge and Node.js runtimes.</strong></td><td>客户端渲染、服务端渲染。客户端组件、服务端组件。 静态渲染、动态渲染。 在边缘和Node.js运行时进行流式处理？？？不懂</td></tr><tr><td>Data Fetching</td><td>Simplified data fetching with async/await in Server Components, and an extended <code>fetch</code> API for request memoization, data caching and revalidation.</td><td>服务端组件直接获取异步数据。扩展了fetch，支持请求缓存，数据缓存和清除</td></tr><tr><td>Styling</td><td>Support for your preferred styling methods, including CSS Modules, Tailwind CSS, and CSS-in-JS</td><td>支持多种样式工程化：CSS Modules, Tailwind CSS, CSS-in-JS</td></tr><tr><td>Optimizations</td><td>Image, Fonts, and Script Optimizations to improve your application&#39;s Core Web Vitals and User Experience.</td><td>图片、字体、script文件都进行了优化，以提升web应用的核心指标和用户体验</td></tr><tr><td>Typescript</td><td>Improved support for TypeScript, with better type checking and more efficient compilation, as well as custom TypeScript Plugin and type checker.</td><td>ts友好，更好的类型校验、更高效的编译，自定义ts插件和类型检查器</td></tr></tbody></table>',5),i=[d];function o(s,c,l,p,h,m){return r(),e("div",null,i)}const S=t(n,[["render",o]]);export{f as __pageData,S as default};
