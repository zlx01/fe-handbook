import{_ as e,c as o,o as r,ag as n}from"./chunks/framework.C86mscM5.js";const a="/fe-handbook/assets/Untitled.BCveMHLx.webp",g=JSON.parse('{"title":"Next.js","description":"","frontmatter":{},"headers":[],"relativePath":"framework/nextjs/index.md","filePath":"framework/nextjs/index.md","lastUpdated":1744516180000}'),i={name:"framework/nextjs/index.md"};function d(s,t,l,p,c,u){return r(),o("div",null,t[0]||(t[0]=[n('<h1 id="next-js" tabindex="-1"><a href="https://nextjs.org/" target="_blank" rel="nofollow noopener noreferrer">Next.js</a> <a class="header-anchor" href="#next-js" aria-label="Permalink to &quot;[Next.js](https://nextjs.org/)&quot;">​</a></h1><blockquote><p>Next.js is a React framework for building full-stack web applications.</p></blockquote><h2 id="main-features" tabindex="-1">Main Features <a class="header-anchor" href="#main-features" aria-label="Permalink to &quot;Main Features&quot;">​</a></h2><p>Some of the main Next.js features include:</p><table tabindex="0"><thead><tr><th>Feature</th><th>Description</th><th></th></tr></thead><tbody><tr><td><a href="https://nextjs.org/docs/app/building-your-application/routing" target="_blank" rel="nofollow noopener noreferrer">Routing</a></td><td>A file-system based router built on top of Server Components that supports layouts, nested routing, loading states, error handling, and more.</td><td>基于文件系统的路由模式。支持服务端组件。支持布局、嵌套路由、加载状态、错误处理</td></tr><tr><td><a href="https://nextjs.org/docs/app/building-your-application/rendering" target="_blank" rel="nofollow noopener noreferrer">Rendering</a></td><td>Client-side and Server-side Rendering with Client and Server Components. Further optimized with Static and Dynamic Rendering on the server with Next.js. Streaming on Edge and Node.js runtimes.</td><td>客户端渲染、服务端渲染。 客户端组件、服务端组件。 静态渲染、动态渲染。 在边缘和Node.js运行时进行流式处理？？？不懂</td></tr><tr><td><a href="https://nextjs.org/docs/app/building-your-application/data-fetching" target="_blank" rel="nofollow noopener noreferrer">Data Fetching</a></td><td>Simplified data fetching with async/await in Server Components, and an extended fetch API for request memoization, data caching and revalidation.</td><td>服务端组件直接获取异步数据。 扩展了fetch，支持请求缓存，数据缓存和清除</td></tr><tr><td><a href="https://nextjs.org/docs/app/building-your-application/styling" target="_blank" rel="nofollow noopener noreferrer">Styling</a></td><td>Support for your preferred styling methods, including CSS Modules, Tailwind CSS, and CSS-in-JS</td><td>支持多种样式工程化：CSS Modules, Tailwind CSS, CSS-in-JS</td></tr><tr><td><a href="https://nextjs.org/docs/app/building-your-application/optimizing" target="_blank" rel="nofollow noopener noreferrer">Optimizations</a></td><td>Image, Fonts, and Script Optimizations to improve your application&#39;s Core Web Vitals and User Experience.</td><td>图片、字体、script文件都进行了优化，以提升web应用的核心指标和用户体验</td></tr><tr><td><a href="https://nextjs.org/docs/app/building-your-application/configuring/typescript" target="_blank" rel="nofollow noopener noreferrer">TypeScript</a></td><td>Improved support for TypeScript, with better type checking and more efficient compilation, as well as custom TypeScript Plugin and type checker.</td><td>ts友好，更好的类型校验、更高效的编译，自定义ts插件和类型检查器</td></tr></tbody></table><h2 id="app-router-vs-pages-router" tabindex="-1"><strong>App Router vs Pages Router</strong> <a class="header-anchor" href="#app-router-vs-pages-router" aria-label="Permalink to &quot;**App Router vs Pages Router**&quot;">​</a></h2><p>Next.js has two different routers: the App Router and the Pages Router. The App Router is a newer router that allows you to use React&#39;s latest features, such as Server Components and Streaming. The Pages Router is the original Next.js router, which allowed you to build server-rendered React applications and continues to be supported for older Next.js applications.</p><p>总结：推荐使用App Router，可以利用React最新的特性：服务端组件和流式渲染</p><h2 id="installation" tabindex="-1"><strong>Installation</strong> <a class="header-anchor" href="#installation" aria-label="Permalink to &quot;**Installation**&quot;">​</a></h2><p>System Requirements:</p><ul><li><a href="https://nodejs.org/" target="_blank" rel="nofollow noopener noreferrer">Node.js 18.17</a> or later.</li><li>macOS, Windows (including WSL), and Linux are supported.</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create-next-app@latest</span></span></code></pre></div><blockquote><p>C:\\Users\\Lee&gt;nvm use 20.9.0 Now using node v20.9.0 (64-bit)</p></blockquote><p>prompts:</p><blockquote><p>What is your project named? my-app</p><p>Would you like to use TypeScript? No / <strong>Yes</strong></p><p>Would you like to use ESLint? No / <strong>Yes</strong></p><p>Would you like to use Tailwind CSS? No / <strong>Yes</strong></p><p>Would you like to use <code>src/</code> directory? <strong>No</strong> / Yes</p><p>Would you like to use App Router? (recommended) No / <strong>Yes</strong></p><p>Would you like to customize the default import alias (@/* )? **No / **Yes</p><p>What import alias would you like configured? <strong>@/</strong></p></blockquote><p>Run the Development Server</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dev</span></span></code></pre></div><p>visit: <a href="http://localhost:3000" target="_blank" rel="nofollow noopener noreferrer">http://localhost:3000</a></p><h2 id="project-structure" tabindex="-1">Project Structure <a class="header-anchor" href="#project-structure" aria-label="Permalink to &quot;Project Structure&quot;">​</a></h2><p><img src="'+a+'" alt="Untitled"></p><h3 id="top-level-folders" tabindex="-1">Top-level folders <a class="header-anchor" href="#top-level-folders" aria-label="Permalink to &quot;Top-level folders&quot;">​</a></h3><table tabindex="0"><thead><tr><th><a href="https://nextjs.org/docs/app/building-your-application/routing" target="_blank" rel="nofollow noopener noreferrer"><code>app</code></a></th><th>App Router</th><th>推荐用这种模式。nextjs从13版本开始引入的。</th></tr></thead><tbody><tr><td><a href="https://nextjs.org/docs/pages/building-your-application/routing" target="_blank" rel="nofollow noopener noreferrer"><code>pages</code></a></td><td>Pages Router</td><td>学不动了。。。</td></tr><tr><td><a href="https://nextjs.org/docs/app/building-your-application/optimizing/static-assets" target="_blank" rel="nofollow noopener noreferrer"><code>public</code></a></td><td>Static assets to be served</td><td>和vue、react不一样，没有index.html</td></tr><tr><td><a href="https://nextjs.org/docs/app/building-your-application/configuring/src-directory" target="_blank" rel="nofollow noopener noreferrer"><code>src</code></a></td><td>Optional application source folder</td><td>建议加上，源码的内容放在同一个目录下方便维护</td></tr></tbody></table><h3 id="top-level-files" tabindex="-1">Top-level files <a class="header-anchor" href="#top-level-files" aria-label="Permalink to &quot;Top-level files&quot;">​</a></h3><table tabindex="0"><thead><tr><th><a href="https://nextjs.org/docs/app/api-reference/next-config-js" target="_blank" rel="nofollow noopener noreferrer"><code>next.config.js</code></a></th><th>Configuration file for Next.js</th><th></th></tr></thead><tbody><tr><td><a href="https://nextjs.org/docs/getting-started/installation#manual-installation" target="_blank" rel="nofollow noopener noreferrer"><code>package.json</code></a></td><td>Project dependencies and scripts</td><td></td></tr><tr><td><a href="https://nextjs.org/docs/app/building-your-application/optimizing/instrumentation" target="_blank" rel="nofollow noopener noreferrer"><code>instrumentation.ts</code></a></td><td>OpenTelemetry and Instrumentation file</td><td></td></tr><tr><td><a href="https://nextjs.org/docs/app/building-your-application/routing/middleware" target="_blank" rel="nofollow noopener noreferrer"><code>middleware.ts</code></a></td><td>Next.js request middleware</td><td></td></tr><tr><td><a href="https://nextjs.org/docs/app/building-your-application/configuring/environment-variables" target="_blank" rel="nofollow noopener noreferrer"><code>.env</code></a></td><td>Environment variables</td><td></td></tr><tr><td><a href="https://nextjs.org/docs/app/building-your-application/configuring/environment-variables" target="_blank" rel="nofollow noopener noreferrer"><code>.env.local</code></a></td><td>Local environment variables</td><td></td></tr><tr><td><a href="https://nextjs.org/docs/app/building-your-application/configuring/environment-variables" target="_blank" rel="nofollow noopener noreferrer"><code>.env.production</code></a></td><td>Production environment variables</td><td></td></tr><tr><td><a href="https://nextjs.org/docs/app/building-your-application/configuring/environment-variables" target="_blank" rel="nofollow noopener noreferrer"><code>.env.development</code></a></td><td>Development environment variables</td><td></td></tr><tr><td><a href="https://nextjs.org/docs/app/building-your-application/configuring/eslint" target="_blank" rel="nofollow noopener noreferrer"><code>.eslintrc.json</code></a></td><td>Configuration file for ESLint</td><td></td></tr><tr><td><code>.gitignore</code></td><td>Git files and folders to ignore</td><td></td></tr><tr><td><code>next-env.d.ts</code></td><td>TypeScript declaration file for Next.js</td><td></td></tr><tr><td><code>tsconfig.json</code></td><td>Configuration file for TypeScript</td><td></td></tr><tr><td><code>jsconfig.json</code></td><td>Configuration file for JavaScript</td><td></td></tr></tbody></table>',24)]))}const f=e(i,[["render",d]]);export{g as __pageData,f as default};
