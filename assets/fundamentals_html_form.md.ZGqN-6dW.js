import{_ as s,c as i,o as t,a4 as a}from"./chunks/framework.CFdyflnk.js";const c=JSON.parse('{"title":"<form>","description":"","frontmatter":{},"headers":[],"relativePath":"fundamentals/html/form.md","filePath":"fundamentals/html/form.md","lastUpdated":1726577403000}'),e={name:"fundamentals/html/form.md"},h=a(`<h1 id="form" tabindex="-1">&lt;form&gt; <a class="header-anchor" href="#form" aria-label="Permalink to &quot;\\&lt;form&gt;&quot;">​</a></h1><ul><li>表单相关比较重要的标签：label，input，button，select，textarea。</li><li>input标签的type属性有很多值，常用的有：text、password、radio、checkbox、file、submit、reset、button</li><li>重要事件：input、change、submit、reset</li><li>把<strong>vue的表单输入绑定</strong>、<strong>React的受控组件/非受控组件</strong>看完并熟悉就差不多了。</li><li>虽然说大多时候都用组件库，但是了解原生表单标签的属性和事件还是有必要的，有些简单的场景用原生表单标签就可以了，不需要引入组件库，杀鸡焉用牛刀。</li></ul><h2 id="手机号输入时344分段" tabindex="-1">手机号输入时344分段 <a class="header-anchor" href="#手机号输入时344分段" aria-label="Permalink to &quot;手机号输入时344分段&quot;">​</a></h2><p><a href="https://github.com/zlx01/phone-number-344" target="_blank" rel="nofollow noopener noreferrer">https://github.com/zlx01/phone-number-344</a></p><h2 id="解决-chrome-表单自动填充的问题" tabindex="-1">解决 chrome 表单自动填充的问题 <a class="header-anchor" href="#解决-chrome-表单自动填充的问题" aria-label="Permalink to &quot;解决 chrome 表单自动填充的问题&quot;">​</a></h2><p><a href="https://zhuanlan.zhihu.com/p/260775688" target="_blank" rel="nofollow noopener noreferrer">https://zhuanlan.zhihu.com/p/260775688</a></p><p>方法一：</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">input</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;text&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> style</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;width: 0;height: 0&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">input</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;password&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> style</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;width: 0;height: 0&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/&gt;</span></span></code></pre></div><p>方法二：</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">input</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;text&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> autocomplete</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;new-password&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">input</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;password&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> autocomplete</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;new-password&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/&gt;</span></span></code></pre></div><h2 id="v-model-无法检测-chrome-自动填充问题" tabindex="-1">v-model 无法检测 Chrome 自动填充问题 <a class="header-anchor" href="#v-model-无法检测-chrome-自动填充问题" aria-label="Permalink to &quot;v-model 无法检测 Chrome 自动填充问题&quot;">​</a></h2><p><a href="https://deepinout.com/vue-js/vue-js-questions/509_vuejs_vue_vmodel_not_detecting_chrome_autocompletion.html" target="_blank" rel="nofollow noopener noreferrer">https://deepinout.com/vue-js/vue-js-questions/509_vuejs_vue_vmodel_not_detecting_chrome_autocompletion.html</a></p><p>原因：v-model是监听输入框的input事件，Chrome自动填充功能会通过更改DOM的方式将值填充到输入框中，而不会触发input事件。</p><p>解决方法：通过监听输入框的change事件来手动更新数据</p>`,14),n=[h];function l(p,o,r,k,d,u){return t(),i("div",null,n)}const g=s(e,[["render",l]]);export{c as __pageData,g as default};
