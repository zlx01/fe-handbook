import{_ as s,c as n,o as a,d as l}from"./app.80f08bd9.js";const e="/fe-handbook/assets/1204295de92f46319e4b33a7852c32f0.e819b902.png",p="/fe-handbook/assets/e4485fbc711d4b2582343b9392db0769.3c3ca4ee.png",o="/fe-handbook/assets/c38c92022fd84103b99f94942051321e.35c79730.png",t="/fe-handbook/assets/311a46e96eee45cb8b1cccb1bd21ac86.2e1faa61.png",r="/fe-handbook/assets/1039ab1442bd4a11a385f30dbebbc2b4.1b1643bb.png",F=JSON.parse('{"title":"Questions and Answers","description":"","frontmatter":{},"headers":[{"level":2,"title":"Ubuntu - bash: ping: command not found","slug":"ubuntu-bash-ping-command-not-found","link":"#ubuntu-bash-ping-command-not-found","children":[]},{"level":2,"title":"ubuntu 容器apt更换阿里云源失败记录","slug":"ubuntu-容器apt更换阿里云源失败记录","link":"#ubuntu-容器apt更换阿里云源失败记录","children":[]},{"level":2,"title":"python in docker+ubuntu+pip install报错","slug":"python-in-docker-ubuntu-pip-install报错","link":"#python-in-docker-ubuntu-pip-install报错","children":[{"level":3,"title":"Why","slug":"why","link":"#why","children":[]},{"level":3,"title":"Solution","slug":"solution","link":"#solution","children":[]},{"level":3,"title":"排查过的点","slug":"排查过的点","link":"#排查过的点","children":[]}]}],"relativePath":"server/DevOps/docker/qa.md","lastUpdated":1676714344000}'),i={name:"server/DevOps/docker/qa.md"},c=l(`<h1 id="questions-and-answers" tabindex="-1">Questions and Answers <a class="header-anchor" href="#questions-and-answers" aria-hidden="true">#</a></h1><h2 id="ubuntu-bash-ping-command-not-found" tabindex="-1">Ubuntu - bash: ping: command not found <a class="header-anchor" href="#ubuntu-bash-ping-command-not-found" aria-hidden="true">#</a></h2><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">apt-get</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">update</span></span>
<span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">apt-get</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">iputils-ping</span></span>
<span class="line"></span></code></pre></div><h2 id="ubuntu-容器apt更换阿里云源失败记录" tabindex="-1">ubuntu 容器apt更换阿里云源失败记录 <a class="header-anchor" href="#ubuntu-容器apt更换阿里云源失败记录" aria-hidden="true">#</a></h2><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 先进入容器内</span></span>
<span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">exec</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-it</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">容器ID</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">bash</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 进入配置文件所在目录</span></span>
<span class="line"><span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/etc/apt</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 备份</span></span>
<span class="line"><span style="color:#FFCB6B;">cp</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">sources.list</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">sources.list.bak</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 清空原配置的内容</span></span>
<span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#C3E88D;">sources.list</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">deb http://mirrors.aliyun.com/ubuntu/ trusty main multiverse restricted universe</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&gt;</span><span style="color:#C3E88D;">sources.list</span></span>
<span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">deb http://mirrors.aliyun.com/ubuntu/ trusty-backports main multiverse restricted universe</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&gt;</span><span style="color:#C3E88D;">sources.list</span></span>
<span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">deb http://mirrors.aliyun.com/ubuntu/ trusty-proposed main multiverse restricted universe</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&gt;</span><span style="color:#C3E88D;">sources.list</span></span>
<span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">deb http://mirrors.aliyun.com/ubuntu/ trusty-security main multiverse restricted universe</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&gt;</span><span style="color:#C3E88D;">sources.list</span></span>
<span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">deb http://mirrors.aliyun.com/ubuntu/ trusty-updates main multiverse restricted universe</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&gt;</span><span style="color:#C3E88D;">sources.list</span></span>
<span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">deb-src http://mirrors.aliyun.com/ubuntu/ trusty main multiverse restricted universe</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&gt;</span><span style="color:#C3E88D;">sources.list</span></span>
<span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">deb-src http://mirrors.aliyun.com/ubuntu/ trusty-backports main multiverse restricted universe</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&gt;</span><span style="color:#C3E88D;">sources.list</span></span>
<span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">deb-src http://mirrors.aliyun.com/ubuntu/ trusty-proposed main multiverse restricted universe</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&gt;</span><span style="color:#C3E88D;">sources.list</span></span>
<span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">deb-src http://mirrors.aliyun.com/ubuntu/ trusty-security main multiverse restricted universe</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&gt;</span><span style="color:#C3E88D;">sources.list</span></span>
<span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">deb-src http://mirrors.aliyun.com/ubuntu/ trusty-updates main multiverse restricted universe</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&gt;</span><span style="color:#C3E88D;">sources.list</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 更新</span></span>
<span class="line"><span style="color:#FFCB6B;">apt</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">update</span></span>
<span class="line"></span></code></pre></div><p><code>apt update</code> 报错：</p><p><img src="`+e+`" alt="在这里插入图片描述"></p><p>注册一下key</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">apt-key</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">adv</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--keyserver</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">kerserver.ubuntu.com</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--recv-keys</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">3B4FE6ACC0B21F32</span></span>
<span class="line"></span></code></pre></div><p>还是报错：</p><blockquote><p>E: gnupg, gnupg2 and gnupg1 do not seem to be installed, but one of them is required for this operation</p></blockquote><p>放弃治疗，直接容器配置到Windows代理</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#82AAFF;">set</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">http_proxy=http://192.168.1.104:</span><span style="color:#F78C6C;">7890</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">set</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">https_proxy=http://192.168.1.104:</span><span style="color:#F78C6C;">7890</span></span>
<span class="line"></span></code></pre></div><h2 id="python-in-docker-ubuntu-pip-install报错" tabindex="-1">python in docker+ubuntu+pip install报错 <a class="header-anchor" href="#python-in-docker-ubuntu-pip-install报错" aria-hidden="true">#</a></h2><p>使用docker官方文档的<a href="https://docs.docker.com/build/building/packaging/" target="_blank" rel="noreferrer">docker build</a>例子，写了个python flask相关的Dockerfile</p><div class="language-dockerfile"><button title="Copy Code" class="copy"></button><span class="lang">dockerfile</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">FROM ubuntu:22.04</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">RUN apt-get update &amp;&amp; apt-get install -y python3 python3-pip</span></span>
<span class="line"><span style="color:#A6ACCD;">RUN pip install flask==2.1.*</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">COPY hello.py /</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">ENV FLASK_APP=hello</span></span>
<span class="line"><span style="color:#A6ACCD;">EXPOSE 8000</span></span>
<span class="line"><span style="color:#A6ACCD;">CMD flask run --host 0.0.0.0 --port 8000</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>构建镜像</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">build</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-t</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">hello-flask:latest</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">.</span></span>
<span class="line"></span></code></pre></div><p>结果报错，卡在 <code>pip install flask==2.1.*</code> 这一步。</p><p>先用docker images找到最后构建失败所用的镜像，这个镜像是根据dockerfile构建的中间层镜像。 <img src="`+p+`" alt="在这里插入图片描述"> 跑起来看看</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">run</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-it</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--rm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">1c54a26cc6be</span></span>
<span class="line"></span></code></pre></div><p>在容器中运行报错的指令，重现问题</p><div class="language-text"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">root@75b426a89abc:/# pip install flask</span></span>
<span class="line"><span style="color:#A6ACCD;">Collecting flask</span></span>
<span class="line"><span style="color:#A6ACCD;">  Downloading Flask-2.2.2-py3-none-any.whl (101 kB)</span></span>
<span class="line"><span style="color:#A6ACCD;">     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 0.0/101.5 KB ? eta -:--:--ERROR: Exception:</span></span>
<span class="line"><span style="color:#A6ACCD;">Traceback (most recent call last):</span></span>
<span class="line"><span style="color:#A6ACCD;">  File &quot;/usr/lib/python3/dist-packages/pip/_internal/cli/base_command.py&quot;, line 165, in exc_logging_wrapper</span></span>
<span class="line"><span style="color:#A6ACCD;">    status = run_func(*args)</span></span>
<span class="line"><span style="color:#A6ACCD;">  File &quot;/usr/lib/python3/dist-packages/pip/_internal/cli/req_command.py&quot;, line 205, in wrapper</span></span>
<span class="line"><span style="color:#A6ACCD;">    return func(self, options, args)</span></span>
<span class="line"><span style="color:#A6ACCD;">  File &quot;/usr/lib/python3/dist-packages/pip/_internal/commands/install.py&quot;, line 339, in run</span></span>
<span class="line"><span style="color:#A6ACCD;">    requirement_set = resolver.resolve(</span></span>
<span class="line"><span style="color:#A6ACCD;">  File &quot;/usr/lib/python3/dist-packages/pip/_internal/resolution/resolvelib/resolver.py&quot;, line 94, in resolve</span></span>
<span class="line"><span style="color:#A6ACCD;">    result = self._result = resolver.resolve(</span></span>
<span class="line"><span style="color:#A6ACCD;">  File &quot;/usr/lib/python3/dist-packages/pip/_vendor/resolvelib/resolvers.py&quot;, line 481, in resolve</span></span>
<span class="line"><span style="color:#A6ACCD;">    state = resolution.resolve(requirements, max_rounds=max_rounds)</span></span>
<span class="line"><span style="color:#A6ACCD;">  File &quot;/usr/lib/python3/dist-packages/pip/_vendor/resolvelib/resolvers.py&quot;, line 348, in resolve</span></span>
<span class="line"><span style="color:#A6ACCD;">    self._add_to_criteria(self.state.criteria, r, parent=None)</span></span>
<span class="line"><span style="color:#A6ACCD;">  File &quot;/usr/lib/python3/dist-packages/pip/_vendor/resolvelib/resolvers.py&quot;, line 172, in _add_to_criteria</span></span>
<span class="line"><span style="color:#A6ACCD;">    if not criterion.candidates:</span></span>
<span class="line"><span style="color:#A6ACCD;">  File &quot;/usr/lib/python3/dist-packages/pip/_vendor/resolvelib/structs.py&quot;, line 151, in __bool__</span></span>
<span class="line"><span style="color:#A6ACCD;">    return bool(self._sequence)</span></span>
<span class="line"><span style="color:#A6ACCD;">  File &quot;/usr/lib/python3/dist-packages/pip/_internal/resolution/resolvelib/found_candidates.py&quot;, line 155, in __bool__</span></span>
<span class="line"><span style="color:#A6ACCD;">    return any(self)</span></span>
<span class="line"><span style="color:#A6ACCD;">  File &quot;/usr/lib/python3/dist-packages/pip/_internal/resolution/resolvelib/found_candidates.py&quot;, line 143, in &lt;genexpr&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    return (c for c in iterator if id(c) not in self._incompatible_ids)</span></span>
<span class="line"><span style="color:#A6ACCD;">  File &quot;/usr/lib/python3/dist-packages/pip/_internal/resolution/resolvelib/found_candidates.py&quot;, line 47, in _iter_built</span></span>
<span class="line"><span style="color:#A6ACCD;">    candidate = func()</span></span>
<span class="line"><span style="color:#A6ACCD;">  File &quot;/usr/lib/python3/dist-packages/pip/_internal/resolution/resolvelib/factory.py&quot;, line 215, in _make_candidate_from_link</span></span>
<span class="line"><span style="color:#A6ACCD;">    self._link_candidate_cache[link] = LinkCandidate(</span></span>
<span class="line"><span style="color:#A6ACCD;">  File &quot;/usr/lib/python3/dist-packages/pip/_internal/resolution/resolvelib/candidates.py&quot;, line 288, in __init__</span></span>
<span class="line"><span style="color:#A6ACCD;">    super().__init__(</span></span>
<span class="line"><span style="color:#A6ACCD;">  File &quot;/usr/lib/python3/dist-packages/pip/_internal/resolution/resolvelib/candidates.py&quot;, line 158, in __init__</span></span>
<span class="line"><span style="color:#A6ACCD;">    self.dist = self._prepare()</span></span>
<span class="line"><span style="color:#A6ACCD;">  File &quot;/usr/lib/python3/dist-packages/pip/_internal/resolution/resolvelib/candidates.py&quot;, line 227, in _prepare</span></span>
<span class="line"><span style="color:#A6ACCD;">    dist = self._prepare_distribution()</span></span>
<span class="line"><span style="color:#A6ACCD;">  File &quot;/usr/lib/python3/dist-packages/pip/_internal/resolution/resolvelib/candidates.py&quot;, line 299, in _prepare_distribution</span></span>
<span class="line"><span style="color:#A6ACCD;">    return preparer.prepare_linked_requirement(self._ireq, parallel_builds=True)</span></span>
<span class="line"><span style="color:#A6ACCD;">  File &quot;/usr/lib/python3/dist-packages/pip/_internal/operations/prepare.py&quot;, line 487, in prepare_linked_requirement</span></span>
<span class="line"><span style="color:#A6ACCD;">    return self._prepare_linked_requirement(req, parallel_builds)</span></span>
<span class="line"><span style="color:#A6ACCD;">  File &quot;/usr/lib/python3/dist-packages/pip/_internal/operations/prepare.py&quot;, line 532, in _prepare_linked_requirement</span></span>
<span class="line"><span style="color:#A6ACCD;">    local_file = unpack_url(</span></span>
<span class="line"><span style="color:#A6ACCD;">  File &quot;/usr/lib/python3/dist-packages/pip/_internal/operations/prepare.py&quot;, line 214, in unpack_url</span></span>
<span class="line"><span style="color:#A6ACCD;">    file = get_http_url(</span></span>
<span class="line"><span style="color:#A6ACCD;">  File &quot;/usr/lib/python3/dist-packages/pip/_internal/operations/prepare.py&quot;, line 94, in get_http_url</span></span>
<span class="line"><span style="color:#A6ACCD;">    from_path, content_type = download(link, temp_dir.path)</span></span>
<span class="line"><span style="color:#A6ACCD;">  File &quot;/usr/lib/python3/dist-packages/pip/_internal/network/download.py&quot;, line 146, in __call__</span></span>
<span class="line"><span style="color:#A6ACCD;">    for chunk in chunks:</span></span>
<span class="line"><span style="color:#A6ACCD;">  File &quot;/usr/lib/python3/dist-packages/pip/_internal/cli/progress_bars.py&quot;, line 303, in _rich_progress_bar</span></span>
<span class="line"><span style="color:#A6ACCD;">    with progress:</span></span>
<span class="line"><span style="color:#A6ACCD;">  File &quot;/usr/lib/python3/dist-packages/pip/_vendor/rich/progress.py&quot;, line 652, in __enter__</span></span>
<span class="line"><span style="color:#A6ACCD;">    self.start()</span></span>
<span class="line"><span style="color:#A6ACCD;">  File &quot;/usr/lib/python3/dist-packages/pip/_vendor/rich/progress.py&quot;, line 643, in start</span></span>
<span class="line"><span style="color:#A6ACCD;">    self.live.start(refresh=True)</span></span>
<span class="line"><span style="color:#A6ACCD;">  File &quot;/usr/lib/python3/dist-packages/pip/_vendor/rich/live.py&quot;, line 124, in start</span></span>
<span class="line"><span style="color:#A6ACCD;">    self._refresh_thread.start()</span></span>
<span class="line"><span style="color:#A6ACCD;">  File &quot;/usr/lib/python3.10/threading.py&quot;, line 935, in start</span></span>
<span class="line"><span style="color:#A6ACCD;">    _start_new_thread(self._bootstrap, ())</span></span>
<span class="line"><span style="color:#A6ACCD;">RuntimeError: can&#39;t start new thread</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h3 id="why" tabindex="-1">Why <a class="header-anchor" href="#why" aria-hidden="true">#</a></h3><p>ubuntu和docker版本不兼容，参考<a href="https://stackoverflow.com/questions/70087344/python-in-docker-runtimeerror-cant-start-new-thread" target="_blank" rel="noreferrer">stackoverflow</a></p><h3 id="solution" tabindex="-1">Solution <a class="header-anchor" href="#solution" aria-hidden="true">#</a></h3><p>ubuntu镜像将版本</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">FROM ubuntu:20.04</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p><img src="`+o+'" alt="在这里插入图片描述"><img src="'+t+'" alt="在这里插入图片描述"><img src="'+r+'" alt="在这里插入图片描述"></p><h3 id="排查过的点" tabindex="-1">排查过的点 <a class="header-anchor" href="#排查过的点" aria-hidden="true">#</a></h3><ul><li>pip版本</li><li>网络问题（pip改用国内源也没用）</li></ul>',31),u=[c];function y(C,d,A,D,h,b){return a(),n("div",null,u)}const g=s(i,[["render",y]]);export{F as __pageData,g as default};
